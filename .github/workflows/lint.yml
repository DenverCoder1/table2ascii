name: lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.7
          cache: pip
          cache-dependency-path: |
            setup.py

      - name: Install dependencies
        run: python -m pip install -e ".[dev]"

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.0

  pyright:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            setup.py

      # all extras are installed to test
      - name: Install dependencies
        run: python -m pip install -e ".[dev]" -e ".[docs]"

      - name: Set up pyright
        run: echo "PYRIGHT_VERSION=$(python -c 'import pyright; print(pyright.__pyright_version__)')" >> $GITHUB_ENV

      - name: Run pyright (Linux)
        uses: jakebailey/pyright-action@v1.3.0
        with:
          version: ${{ env.PYRIGHT_VERSION }}
          python-version: ${{ matrix.python-version }}
          python-platform: Linux
          # only add comments for 3.7
          no-comments: ${{ matrix.python-version != '3.7' }}
          warnings: true

      - name: Run pyright (Windows)
        uses: jakebailey/pyright-action@v1.3.0
        # run anyway
        if: success() || failure()
        with:
          version: ${{ env.PYRIGHT_VERSION }}
          python-version: ${{ matrix.python-version }}
          python-platform: Windows
          # only add comments for one platform
          no-comments: true
          warnings: true

  slotscheck:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.7
          cache: pip
          cache-dependency-path: |
            setup.py

      - name: Install dependencies
        run: python -m pip install -e ".[dev]"

      - name: Run slotscheck
        run: task slotscheck
